"""
–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫–æ–Ω—Ç–µ–∫—Å—Ç–æ–º –¥–ª—è Session Manager

–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç —Å–Ω–∏–º–∫–∏ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞ –∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏—é PROJECT.md.
"""

from datetime import datetime
from typing import Optional, Dict, Any
import re

from .project import Project, ProjectError


class ContextError(Exception):
    """–ë–∞–∑–æ–≤–æ–µ –∏—Å–∫–ª—é—á–µ–Ω–∏–µ –¥–ª—è –æ—à–∏–±–æ–∫, —Å–≤—è–∑–∞–Ω–Ω—ã—Ö —Å –∫–æ–Ω—Ç–µ–∫—Å—Ç–æ–º"""

    pass


class ContextManager:
    """
    –£–ø—Ä–∞–≤–ª—è–µ—Ç –∫–æ–Ω—Ç–µ–∫—Å—Ç–æ–º –ø—Ä–æ–µ–∫—Ç–∞: —Å–Ω–∏–º–∫–∏ –∏ PROJECT.md.

    –°–æ–∑–¥–∞–µ—Ç —Å–Ω–∏–º–∫–∏ —Ä–∞–±–æ—á–∏—Ö —Å–µ—Å—Å–∏–π –∏ –≥–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç PROJECT.md
    —Å –ø–æ—Å–ª–µ–¥–Ω–µ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ –∫–æ–Ω—Ç–µ–∫—Å—Ç–µ.
    """

    def __init__(self, project: Project):
        """
        –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å –º–µ–Ω–µ–¥–∂–µ—Ä –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞ –¥–ª—è –ø—Ä–æ–µ–∫—Ç–∞.

        Args:
            project: –≠–∫–∑–µ–º–ø–ª—è—Ä –ø—Ä–æ–µ–∫—Ç–∞ –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∫–æ–Ω—Ç–µ–∫—Å—Ç–æ–º
        """
        self.project = project

    def save_snapshot(
        self,
        session_data: Dict[str, Any],
        summary: str,
        next_action: str,
        git_info: Optional[Dict] = None,
        test_info: Optional[Dict] = None,
    ) -> str:
        """
        –°–æ—Ö—Ä–∞–Ω–∏—Ç—å —Å–Ω–∏–º–æ–∫ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞.

        Args:
            session_data: –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–µ—Å—Å–∏–∏
            summary: –†–µ–∑—é–º–µ –ø—Ä–æ–¥–µ–ª–∞–Ω–Ω–æ–π —Ä–∞–±–æ—Ç—ã
            next_action: –°–ª–µ–¥—É—é—â–µ–µ –¥–µ–π—Å—Ç–≤–∏–µ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è
            git_info: –ù–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è git
            test_info: –ù–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è —Ç–µ—Å—Ç–æ–≤

        Returns:
            –ü—É—Ç—å –∫ —Ñ–∞–π–ª—É —Å–Ω–∏–º–∫–∞

        Raises:
            ContextError: –ï—Å–ª–∏ —Å–Ω–∏–º–æ–∫ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å —Å–æ—Ö—Ä–∞–Ω–µ–Ω
        """
        # –°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –º–µ—Ç–∫—É –≤—Ä–µ–º–µ–Ω–∏ –¥–ª—è –∏–º–µ–Ω–∏ —Ñ–∞–π–ª–∞
        timestamp = datetime.now().strftime("%Y%m%d_%H%M%S")
        snapshot_path = self.project.get_snapshot_path(timestamp)

        # –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞—Ç—å —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ —Å–Ω–∏–º–∫–∞
        content = self._format_snapshot(
            session_data, summary, next_action, git_info, test_info
        )

        # –°–æ—Ö—Ä–∞–Ω–∏—Ç—å —Å–Ω–∏–º–æ–∫
        try:
            snapshot_path.parent.mkdir(parents=True, exist_ok=True)
            snapshot_path.write_text(content, encoding="utf-8")
        except OSError as e:
            raise ContextError(f"–ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å —Å–Ω–∏–º–æ–∫: {e}")

        return str(snapshot_path)

    def load_last_snapshot(self) -> Optional[Dict[str, Any]]:
        """
        –ó–∞–≥—Ä—É–∑–∏—Ç—å —Å–∞–º—ã–π –ø–æ—Å–ª–µ–¥–Ω–∏–π —Å–Ω–∏–º–æ–∫.

        Returns:
            –°–ª–æ–≤–∞—Ä—å —Å –¥–∞–Ω–Ω—ã–º–∏ —Å–Ω–∏–º–∫–∞ –∏–ª–∏ None, –µ—Å–ª–∏ —Å–Ω–∏–º–∫–æ–≤ –Ω–µ—Ç
        """
        latest = self.project.get_latest_snapshot()

        if not latest:
            return None

        try:
            content = latest.read_text(encoding="utf-8")
            return self._parse_snapshot(content)
        except OSError:
            return None

    def generate_project_md(
        self,
        session_data: Dict[str, Any],
        summary: str,
        next_action: str,
    ) -> None:
        """
        –°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –∏–ª–∏ –æ–±–Ω–æ–≤–∏—Ç—å PROJECT.md —Å –ø–æ—Å–ª–µ–¥–Ω–∏–º –∫–æ–Ω—Ç–µ–∫—Å—Ç–æ–º.

        Args:
            session_data: –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–µ—Å—Å–∏–∏
            summary: –†–µ–∑—é–º–µ –ø–æ—Å–ª–µ–¥–Ω–µ–π —Å–µ—Å—Å–∏–∏
            next_action: –°–ª–µ–¥—É—é—â–µ–µ –¥–µ–π—Å—Ç–≤–∏–µ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è

        Raises:
            ContextError: –ï—Å–ª–∏ PROJECT.md –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –æ–±–Ω–æ–≤–ª–µ–Ω
        """
        # –†–∞—Å—Å—á–∏—Ç–∞—Ç—å –ø—Ä–æ–¥–æ–ª–∂–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å —Å–µ—Å—Å–∏–∏
        duration_str = "N/A"
        if session_data.get("duration"):
            duration = session_data["duration"]
            hours = duration // 3600
            minutes = (duration % 3600) // 60
            if hours > 0:
                duration_str = f"{hours}—á {minutes}–º"
            else:
                duration_str = f"{minutes}–º"

        # –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞—Ç—å —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ
        content = f"""# –ö–æ–Ω—Ç–µ–∫—Å—Ç –ø—Ä–æ–µ–∫—Ç–∞

**–ü–æ—Å–ª–µ–¥–Ω–µ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ:** {datetime.now().strftime("%Y-%m-%d %H:%M")}  
**–ü—Ä–æ–¥–æ–ª–∂–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å —Å–µ—Å—Å–∏–∏:** {duration_str}

## üéØ –°–ª–µ–¥—É—é—â–µ–µ –¥–µ–π—Å—Ç–≤–∏–µ

{next_action}

## üìù –†–µ–∑—é–º–µ –ø–æ—Å–ª–µ–¥–Ω–µ–π —Å–µ—Å—Å–∏–∏

{summary}

---

## –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–µ—Å—Å–∏–∏

- **–ù–∞—á–∞–ª–æ:** {session_data.get("start_time", "N/A")}
- **–ö–æ–Ω–µ—Ü:** {session_data.get("end_time", "N/A")}
- **–í–µ—Ç–∫–∞:** {session_data.get("branch", "N/A")}
- **–ü–æ—Å–ª–µ–¥–Ω–∏–π –∫–æ–º–º–∏—Ç:** {session_data.get("last_commit", "N/A")}

---

## –ë—ã—Å—Ç—Ä—ã–µ –∫–æ–º–∞–Ω–¥—ã

```bash
# –ù–∞—á–∞—Ç—å –Ω–æ–≤—É—é —Å–µ—Å—Å–∏—é
session start

# –ó–∞–≤–µ—Ä—à–∏—Ç—å —Ç–µ–∫—É—â—É—é —Å–µ—Å—Å–∏—é
session end

# –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Å—Ç–∞—Ç—É—Å
session status

# –ü—Ä–æ—Å–º–æ—Ç—Ä –∏—Å—Ç–æ—Ä–∏–∏
session history
```

## –°–æ–≤–µ—Ç—ã

- –ü—Ä–æ—Å–º–æ—Ç—Ä–∏—Ç–µ **–°–ª–µ–¥—É—é—â–µ–µ –¥–µ–π—Å—Ç–≤–∏–µ** –≤—ã—à–µ, —á—Ç–æ–±—ã –±—ã—Å—Ç—Ä–æ –≤–µ—Ä–Ω—É—Ç—å—Å—è –∫ —Ä–∞–±–æ—Ç–µ
- –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Å—Ç–∞—Ç—É—Å –≤–µ—Ç–∫–∏ –∏ –∫–æ–º–º–∏—Ç–∞ git –ø–µ—Ä–µ–¥ –Ω–∞—á–∞–ª–æ–º
- –ó–∞–ø—É—Å—Ç–∏—Ç–µ —Ç–µ—Å—Ç—ã, —á—Ç–æ–±—ã —É–±–µ–¥–∏—Ç—å—Å—è, —á—Ç–æ –≤—Å–µ —Ä–∞–±–æ—Ç–∞–µ—Ç
- –û–±–Ω–æ–≤–∏—Ç–µ —ç—Ç–æ—Ç —Ñ–∞–π–ª –≤ –∫–æ–Ω—Ü–µ –∫–∞–∂–¥–æ–π —Å–µ—Å—Å–∏–∏
"""

        try:
            self.project.update_project_md(content)
        except ProjectError as e:
            raise ContextError(f"–ù–µ —É–¥–∞–ª–æ—Å—å –æ–±–Ω–æ–≤–∏—Ç—å PROJECT.md: {e}")

    def get_next_action_from_project_md(self) -> Optional[str]:
        """
        –ò–∑–≤–ª–µ—á—å "–°–ª–µ–¥—É—é—â–µ–µ –¥–µ–π—Å—Ç–≤–∏–µ" –∏–∑ PROJECT.md.

        Returns:
            –¢–µ–∫—Å—Ç —Å–ª–µ–¥—É—é—â–µ–≥–æ –¥–µ–π—Å—Ç–≤–∏—è –∏–ª–∏ None, –µ—Å–ª–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ
        """
        if not self.project.has_project_md():
            return None

        try:
            content = self.project.get_project_md_content()

            # –ò—Å–∫–∞—Ç—å —Ä–∞–∑–¥–µ–ª "–°–ª–µ–¥—É—é—â–µ–µ –¥–µ–π—Å—Ç–≤–∏–µ"
            match = re.search(
                r"## üéØ –°–ª–µ–¥—É—é—â–µ–µ –¥–µ–π—Å—Ç–≤–∏–µ\s*\n\s*\n(.+?)(?:\n\n##|\Z)",
                content,
                re.DOTALL,
            )

            if match:
                return match.group(1).strip()

            return None

        except ProjectError:
            return None

    def _format_snapshot(
        self,
        session_data: Dict[str, Any],
        summary: str,
        next_action: str,
        git_info: Optional[Dict] = None,
        test_info: Optional[Dict] = None,
    ) -> str:
        """
        –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞—Ç—å —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ —Å–Ω–∏–º–∫–∞ –∫–∞–∫ Markdown.

        Args:
            session_data: –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–µ—Å—Å–∏–∏
            summary: –†–µ–∑—é–º–µ —Å–µ—Å—Å–∏–∏
            next_action: –°–ª–µ–¥—É—é—â–µ–µ –¥–µ–π—Å—Ç–≤–∏–µ
            git_info: –ù–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è git
            test_info: –ù–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è —Ç–µ—Å—Ç–æ–≤

        Returns:
            –û—Ç—Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ Markdown
        """
        timestamp = datetime.now().strftime("%Y-%m-%d %H:%M:%S")

        content = f"""# –°–Ω–∏–º–æ–∫ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞ —Å–µ—Å—Å–∏–∏

**–°–æ–∑–¥–∞–Ω:** {timestamp}  
**ID —Å–µ—Å—Å–∏–∏:** {session_data.get("id", "N/A")}

---

## üìã –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–µ—Å—Å–∏–∏

- **–ù–∞—á–∞–ª–æ:** {session_data.get("start_time", "N/A")}
- **–ö–æ–Ω–µ—Ü:** {session_data.get("end_time", "N/A")}
- **–ü—Ä–æ–¥–æ–ª–∂–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å:** {self._format_duration(session_data.get("duration", 0))}
- **–û–ø–∏—Å–∞–Ω–∏–µ:** {session_data.get("description", "N/A")}

---

## üìù –†–µ–∑—é–º–µ

{summary if summary else "_–†–µ–∑—é–º–µ –Ω–µ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–æ_"}

---

## üéØ –°–ª–µ–¥—É—é—â–µ–µ –¥–µ–π—Å—Ç–≤–∏–µ

{next_action if next_action else "_–°–ª–µ–¥—É—é—â–µ–µ –¥–µ–π—Å—Ç–≤–∏–µ –Ω–µ —É–∫–∞–∑–∞–Ω–æ_"}


---
"""

        # –î–æ–±–∞–≤–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é git, –µ—Å–ª–∏ –¥–æ—Å—Ç—É–ø–Ω–∞
        if git_info:
            content += """
## üåø –°—Ç–∞—Ç—É—Å Git

"""
            if git_info.get("branch"):
                content += f"- **–í–µ—Ç–∫–∞:** `{git_info['branch']}`\n"
            if git_info.get("last_commit"):
                content += f"- **–ü–æ—Å–ª–µ–¥–Ω–∏–π –∫–æ–º–º–∏—Ç:** `{git_info['last_commit']}`\n"
            if git_info.get("uncommitted_changes"):
                content += f"- **–ù–µ–∑–∞–∫–æ–º–º–∏—á–µ–Ω–Ω—ã–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è:**\n```\n{git_info['uncommitted_changes']}\n```\n"
            elif git_info.get("has_changes") is False:
                content += "- **–°—Ç–∞—Ç—É—Å:** –†–∞–±–æ—á–∏–π –∫–∞—Ç–∞–ª–æ–≥ —á–∏—Å—Ç ‚úÖ\n"

            content += "\n---\n"

        # –î–æ–±–∞–≤–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é —Ç–µ—Å—Ç–æ–≤, –µ—Å–ª–∏ –¥–æ—Å—Ç—É–ø–Ω–∞
        if test_info:
            content += """
## üß™ –°—Ç–∞—Ç—É—Å —Ç–µ—Å—Ç–æ–≤

"""
            if test_info.get("summary"):
                content += f"{test_info['summary']}\n"

            content += "\n---\n"

        content += """
## üí° –ó–∞–º–µ—Ç–∫–∏

- –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —ç—Ç–æ—Ç —Å–Ω–∏–º–æ–∫ –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞
- –ü—Ä–æ—Å–º–æ—Ç—Ä–∏—Ç–µ –°–ª–µ–¥—É—é—â–µ–µ –¥–µ–π—Å—Ç–≤–∏–µ –ø–µ—Ä–µ–¥ –Ω–∞—á–∞–ª–æ–º —Ä–∞–±–æ—Ç—ã
- –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Å—Ç–∞—Ç—É—Å git –¥–ª—è –ª—é–±–æ–π –Ω–µ–∑–∞–∫–æ–º–º–∏—á–µ–Ω–Ω–æ–π —Ä–∞–±–æ—Ç—ã
"""

        return content

    def _parse_snapshot(self, content: str) -> Dict[str, Any]:
        """
        –†–∞–∑–æ–±—Ä–∞—Ç—å —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ —Å–Ω–∏–º–∫–∞ –≤ —Å—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ.

        Args:
            content: –°–æ–¥–µ—Ä–∂–∏–º–æ–µ —Å–Ω–∏–º–∫–∞ Markdown

        Returns:
            –°–ª–æ–≤–∞—Ä—å —Å —Ä–∞–∑–æ–±—Ä–∞–Ω–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏ —Å–Ω–∏–º–∫–∞
        """
        data = {}

        # –ò–∑–≤–ª–µ—á—å ID —Å–µ—Å—Å–∏–∏
        session_id_match = re.search(r"\*\*ID —Å–µ—Å—Å–∏–∏:\*\* (.+)", content)
        if session_id_match:
            data["session_id"] = session_id_match.group(1)

        # –ò–∑–≤–ª–µ—á—å —Ä–µ–∑—é–º–µ
        summary_match = re.search(
            r"## üìù –†–µ–∑—é–º–µ\s*\n\s*\n(.+?)(?:\n\n##|\Z)", content, re.DOTALL
        )
        if summary_match:
            data["summary"] = summary_match.group(1).strip()

        # –ò–∑–≤–ª–µ—á—å —Å–ª–µ–¥—É—é—â–µ–µ –¥–µ–π—Å—Ç–≤–∏–µ
        next_action_match = re.search(
            r"## üéØ –°–ª–µ–¥—É—é—â–µ–µ –¥–µ–π—Å—Ç–≤–∏–µ\s*\n\s*\n(.+?)(?:\n\n##|\Z)", content, re.DOTALL
        )
        if next_action_match:
            data["next_action"] = next_action_match.group(1).strip()

        return data

    def _format_duration(self, seconds: int) -> str:
        """
        –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞—Ç—å –ø—Ä–æ–¥–æ–ª–∂–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –≤ —É–¥–æ–±–æ—á–∏—Ç–∞–µ–º–æ–º –≤–∏–¥–µ.

        Args:
            seconds: –ü—Ä–æ–¥–æ–ª–∂–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –≤ —Å–µ–∫—É–Ω–¥–∞—Ö

        Returns:
            –û—Ç—Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–Ω–∞—è —Å—Ç—Ä–æ–∫–∞ –ø—Ä–æ–¥–æ–ª–∂–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏
        """
        if seconds < 60:
            return f"{seconds}—Å"

        minutes = seconds // 60
        remaining_seconds = seconds % 60

        if minutes < 60:
            if remaining_seconds > 0:
                return f"{minutes}–º {remaining_seconds}—Å"
            return f"{minutes}–º"

        hours = minutes // 60
        remaining_minutes = minutes % 60

        if remaining_minutes > 0:
            return f"{hours}—á {remaining_minutes}–º"
        return f"{hours}—á"
